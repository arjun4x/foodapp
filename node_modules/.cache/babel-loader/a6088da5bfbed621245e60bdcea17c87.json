{"ast":null,"code":"var _jsxFileName = \"E:\\\\food\\\\food app\\\\src\\\\components\\\\context\\\\CartProvider.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useReducer } from 'react';\nimport CartContext from './cart-context';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultCart = {\n  items: [],\n  totalamount: 0\n};\n\nconst cartReducer = (state, action) => {\n  if (action.type === 'Add') {\n    const updateTotalamount = state.totalamount + action.item.amount * action.item.price;\n    const existingItemIndex = state.items.findIndex(item => item.id === action.item.id);\n    const existingCartItem = state.items[existingItemIndex];\n    let updateItem;\n\n    if (existingCartItem) {\n      const updateItems = { ...existingCartItem,\n        amount: existingCartItem.amount + action.item.amount\n      };\n      updateItem = [...state.items];\n      updateItem[existingItemIndex] = updateItems;\n    } else {\n      updateItem = state.items.concat(action.item);\n    }\n\n    return {\n      items: updateItem,\n      totalamount: updateTotalamount\n    };\n  }\n\n  if (action.type === 'REMOVE') {\n    let removeItem;\n    const updateTotalamount = state.totalamount + action.item.amount * action.item.price;\n    const existingItemIndex = state.item.findIndex(item => state.items.id === action.item.id);\n    const existingCartItem = state.items[existingItemIndex];\n    const updateItems = { ...existingCartItem,\n      amount: existingCartItem.items - action.item.amount\n    };\n    removeitem = [...state.item];\n    removeitem[existingItemIndex] = updateItems;\n    return {\n      items: removeItem,\n      totalamount: updateTotalamount\n    };\n  }\n\n  return defaultCart;\n};\n\nconst CartProvider = props => {\n  _s();\n\n  const [cartState, dispatchAction] = useReducer(cartReducer, defaultCart);\n\n  const addItemCart = item => {\n    dispatchAction({\n      type: 'Add',\n      item: item\n    });\n  };\n\n  const removeItemCart = id => {\n    dispatchAction({\n      type: 'REMOVE',\n      id: id\n    });\n  };\n\n  const cartContext = {\n    items: [],\n    totalamount: 0,\n    addItem: addItemCart,\n    removeItem: removeItemCart\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: {\n      cartContext,\n      cartState\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 10\n  }, this);\n};\n\n_s(CartProvider, \"HoBysmQqTt3Go6pXusqt8SGz6ww=\");\n\n_c = CartProvider;\nexport default CartProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"sources":["E:/food/food app/src/components/context/CartProvider.js"],"names":["React","useState","useReducer","CartContext","defaultCart","items","totalamount","cartReducer","state","action","type","updateTotalamount","item","amount","price","existingItemIndex","findIndex","id","existingCartItem","updateItem","updateItems","concat","removeItem","removeitem","CartProvider","props","cartState","dispatchAction","addItemCart","removeItemCart","cartContext","addItem","children"],"mappings":"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","sourcesContent":["import React ,{useState,useReducer} from 'react';\r\nimport CartContext from './cart-context';\r\n\r\nconst defaultCart={\r\n\titems:[],\r\n\ttotalamount:0\r\n} \r\nconst cartReducer = (state,action)=>{\r\n\t\r\n\t\r\n\tif( action.type === 'Add' ){\r\n\t\tconst updateTotalamount = state.totalamount +( action.item.amount * action.item.price);\r\n\r\n\t\tconst existingItemIndex = state.items.findIndex(item=> item.id === action.item.id);\r\n\t\r\n\t\tconst existingCartItem = state.items[existingItemIndex];\r\n\t\r\n\t\t\r\n\t\tlet updateItem;\r\n\t\tif(existingCartItem){\r\n\t\tconst\tupdateItems={\r\n\t\t\t   ...existingCartItem,\r\n\t\t\t\tamount: existingCartItem.amount + action.item.amount,\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tupdateItem = [...state.items] ;\r\n\t\t\tupdateItem[existingItemIndex] = updateItems ;\r\n\t\t}else{\r\n\t\t\t\r\n\t\t\tupdateItem =  state.items.concat(action.item)\r\n\t\t}\r\n\t\t\r\n\t\t\t\r\n\t\treturn{\r\n\t\t\titems :updateItem,\r\n\t\t\ttotalamount : updateTotalamount,\r\n\t\t}\r\n\t}\r\n\t\r\n\t if(action.type === 'REMOVE' )\r\n\t\r\n\t{\r\n\t\tlet removeItem;\r\n\t\tconst updateTotalamount = state.totalamount +( action.item.amount * action.item.price);\r\n\t\tconst existingItemIndex = state.item.findIndex(item=>state.items.id === action.item.id);\r\n        const existingCartItem = state.items[existingItemIndex];\r\n\t\tconst updateItems ={\r\n\t\t\t...existingCartItem,amount:existingCartItem.items - action.item.amount,\r\n\t\t} \r\n\t\tremoveitem = [...state.item];\r\n\t\tremoveitem[existingItemIndex]=updateItems;\r\n\t\treturn{\r\n\t\t\titems :removeItem,\r\n\t\t\ttotalamount : updateTotalamount,\r\n\t\t}\r\n\t}\r\n\t\r\n\r\nreturn defaultCart\r\n}\r\n const CartProvider = (props) =>{\r\n\t const [cartState, dispatchAction] = useReducer(cartReducer,defaultCart)\r\n\r\n\r\n\t const addItemCart = (item) => {\r\n\t\t dispatchAction({type:'Add', item : item})\r\n\r\n\t }\r\n\t const removeItemCart = (id) =>{\r\n\t\t dispatchAction({type:'REMOVE' , id:id})\r\n\r\n\t }\r\n\t const cartContext ={\r\n\t\t items:[],\r\n\t\t totalamount:0,\r\n\t\t addItem:addItemCart,\r\n\t\t removeItem:removeItemCart\r\n\t }\r\n\t \r\n\t return <CartContext.Provider value={{cartContext,cartState}}>\r\n\t\t {props.children}\r\n\t </CartContext.Provider>\r\n }\r\n export default CartProvider;"]},"metadata":{},"sourceType":"module"}