{"ast":null,"code":"var _jsxFileName = \"E:\\\\food\\\\food app\\\\src\\\\components\\\\context\\\\CartProvider.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useReducer } from 'react';\nimport CartContext from './cart-context';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultCart = {\n  item: [],\n  totalamount: 0\n};\n\nconst cartReducer = (state, action) => {\n  if (action.type === Add) {\n    const updateItem = state.item.concat(action.item);\n    const updateTotalamount = state.totalamount + action.item.amount * action.item.price;\n    return {\n      items: updateItem,\n      totalamount: updateTotalamount\n    };\n  }\n\n  return defaultCart;\n};\n\nconst CartProvider = props => {\n  _s();\n\n  const [cartState, dispatchAction] = useReducer(cartReducer, defaultCart);\n\n  const addItemCart = item => {\n    dispatchAction({\n      type: 'Add',\n      item: item\n    });\n  };\n\n  const removeItemCart = id => {\n    dispatchAction({\n      type: 'REMOVE',\n      id: id\n    });\n  };\n\n  const cartContext = {\n    items: [],\n    totalamount: 0,\n    addItem: addItemCart,\n    removeItem: removeItemCart\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: {\n      cartContext\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 10\n  }, this);\n};\n\n_s(CartProvider, \"HoBysmQqTt3Go6pXusqt8SGz6ww=\");\n\n_c = CartProvider;\nexport default CartProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"sources":["E:/food/food app/src/components/context/CartProvider.js"],"names":["React","useState","useReducer","CartContext","defaultCart","item","totalamount","cartReducer","state","action","type","Add","updateItem","concat","updateTotalamount","amount","price","items","CartProvider","props","cartState","dispatchAction","addItemCart","removeItemCart","id","cartContext","addItem","removeItem","children"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAwBC,UAAxB,QAAyC,OAAzC;AACA,OAAOC,WAAP,MAAwB,gBAAxB;;AAEA,MAAMC,WAAW,GAAC;AACjBC,EAAAA,IAAI,EAAC,EADY;AAEjBC,EAAAA,WAAW,EAAC;AAFK,CAAlB;;AAIA,MAAMC,WAAW,GAAG,CAACC,KAAD,EAAOC,MAAP,KAAgB;AACnC,MAAIA,MAAM,CAACC,IAAP,KAAgBC,GAApB,EAAyB;AACxB,UAAMC,UAAU,GAAGJ,KAAK,CAACH,IAAN,CAAYQ,MAAZ,CAAmBJ,MAAM,CAACJ,IAA1B,CAAnB;AACA,UAAMS,iBAAiB,GAAGN,KAAK,CAACF,WAAN,GAAoBG,MAAM,CAACJ,IAAP,CAAYU,MAAZ,GAAqBN,MAAM,CAACJ,IAAP,CAAYW,KAA/E;AACA,WAAM;AACLC,MAAAA,KAAK,EAAEL,UADF;AAELN,MAAAA,WAAW,EAAGQ;AAFT,KAAN;AAKA;;AAEF,SAAOV,WAAP;AACC,CAZD;;AAaC,MAAMc,YAAY,GAAIC,KAAD,IAAU;AAAA;;AAC9B,QAAM,CAACC,SAAD,EAAYC,cAAZ,IAA8BnB,UAAU,CAACK,WAAD,EAAaH,WAAb,CAA9C;;AAGA,QAAMkB,WAAW,GAAIjB,IAAD,IAAU;AAC7BgB,IAAAA,cAAc,CAAC;AAACX,MAAAA,IAAI,EAAC,KAAN;AAAaL,MAAAA,IAAI,EAAGA;AAApB,KAAD,CAAd;AAEA,GAHD;;AAIA,QAAMkB,cAAc,GAAIC,EAAD,IAAO;AAC7BH,IAAAA,cAAc,CAAC;AAACX,MAAAA,IAAI,EAAC,QAAN;AAAiBc,MAAAA,EAAE,EAACA;AAApB,KAAD,CAAd;AAEA,GAHD;;AAIA,QAAMC,WAAW,GAAE;AAClBR,IAAAA,KAAK,EAAC,EADY;AAElBX,IAAAA,WAAW,EAAC,CAFM;AAGlBoB,IAAAA,OAAO,EAACJ,WAHU;AAIlBK,IAAAA,UAAU,EAACJ;AAJO,GAAnB;AAMA,sBAAO,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAE;AAACE,MAAAA;AAAD,KAA7B;AAAA,cACLN,KAAK,CAACS;AADD;AAAA;AAAA;AAAA;AAAA,UAAP;AAGA,CArBD;;GAAMV,Y;;KAAAA,Y;AAsBN,eAAeA,YAAf","sourcesContent":["import React ,{useState,useReducer} from 'react';\r\nimport CartContext from './cart-context';\r\n\r\nconst defaultCart={\r\n\titem:[],\r\n\ttotalamount:0\r\n} \r\nconst cartReducer = (state,action)=>{\r\n\tif( action.type === Add ){\r\n\t\tconst updateItem = state.item .concat(action.item);\r\n\t\tconst updateTotalamount = state.totalamount + action.item.amount * action.item.price;\r\n\t\treturn{\r\n\t\t\titems :updateItem,\r\n\t\t\ttotalamount : updateTotalamount,\r\n\t\t}\r\n\r\n\t}\r\n\r\nreturn defaultCart\r\n}\r\n const CartProvider = (props) =>{\r\n\t const [cartState, dispatchAction] = useReducer(cartReducer,defaultCart)\r\n\r\n\r\n\t const addItemCart = (item) => {\r\n\t\t dispatchAction({type:'Add', item : item})\r\n\r\n\t }\r\n\t const removeItemCart = (id) =>{\r\n\t\t dispatchAction({type:'REMOVE' , id:id})\r\n\r\n\t }\r\n\t const cartContext ={\r\n\t\t items:[],\r\n\t\t totalamount:0,\r\n\t\t addItem:addItemCart,\r\n\t\t removeItem:removeItemCart\r\n\t }\r\n\t return <CartContext.Provider value={{cartContext}}>\r\n\t\t {props.children}\r\n\t </CartContext.Provider>\r\n }\r\n export default CartProvider;"]},"metadata":{},"sourceType":"module"}